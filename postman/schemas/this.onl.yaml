openapi: 3.0.0
info:
    version: '1.0.0'
    title: 'This.onl'
    license:
        name: MIT
servers:
    - url: 'localhost:3000'
paths:
    /api/endpoint:
        post:
            summary: 'Create endpoint: Create a new endpoint'
            operationId: createEnpoint
            tags:
                - endpoint
            requestBody:
                description: 'Create endpoint request: Details to create a new endpoint'
                content:
                    application/json:
                        schema:
                            $ref: '$/compenents/schemas/EndpointRequestBody'
            responses:
                '201':
                    description: 'Create endpoint response: Details about new endpoint created'
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Endpoint'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        get:
            summary: 'Get endpoint: Get endpoint list'
            operationId: getListEnpoint
            tags:
                - endpoint
            parameters:
                - $ref: '#/components/parameters/LimitQuery'
                - $ref: '#/components/parameters/OffsetQuery'
                - $ref: '#/components/parameters/EndpointStatusQuery'
            responses:
                '200':
                    description: 'Get endpoint response: Details list about endpoint'
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Endpoint'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/endpoint/{id}:
        get:
            summary: 'Get endpoint: Get endpoint by ID'
            operationId: getEnpointByID
            tags:
                - endpoint
            parameters:
                - $ref: '#/components/parameters/EndpointIdPath'
            responses:
                '200':
                    description: 'Get endpoint response: Details about endpoint by ID'
                    content:
                        application/json:
                            schema:
                                type: object
                                required:
                                    - data
                                properties:
                                    data:
                                        $ref: '#/components/schemas/Endpoint'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        put:
            summary: 'Update endpoint: Update endpoint by ID'
            operationId: updateEnpointByID
            tags:
                - endpoint
            parameters:
                - $ref: '#/components/parameters/EndpointIdPath'
            requestBody:
                description: 'Update endpoint request: Details to update endpoint'
                content:
                    application/json:
                        schema:
                            $ref: '$/compenents/schemas/EndpointRequestBody'
            responses:
                '200':
                    description: 'Update endpoint response: Endpoint success updated'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            summary: 'Delete endpoint: Delete endpoint by ID'
            operationId: deleteEnpointBuyID
            tags:
                - endpoint
            parameters:
                - $ref: '#/components/parameters/EndpointIdPath'
            responses:
                '200':
                    description: 'Delete endpoint response: Endpoint success deleted'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
components:
    parameters:
        EndpointIdPath:
            name: id
            in: path
            description: Endpoint ID to fetch
            required: true
            schema:
                type: integer
        LimitQuery:
            name: limit
            in: query
            description: Limit the number of returned results
            required: false
            schema:
                type: integer
                minimum: 1
                default: 100
                format: int32
        OffsetQuery:
            name: offset
            in: query
            description: Exclude the number of returned results
            required: false
            schema:
                type: integer
                minimum: 0
                default: 0
                format: int32
        EndpointStatusQuery:
            name: status
            in: query
            description: Define status to filter endpoint results
            required: false
            schema:
                type: string
    schemas:
        EndpointRequestBody:
            type: object
            required:
                - uri
            properties:
                uri:
                    type: string
                tags:
                    type: string
        Endpoint:
            type: object
            required:
                - id
                - uri
                - shortUri
            properties:
                id:
                    type: integer
                    format: int64
                uri:
                    type: string
                shortUri:
                    type: string
                tags:
                    type: string
                status:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
        Error:
            type: object
            required:
                - code
                - message
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
security:
    - BearerAuth: []